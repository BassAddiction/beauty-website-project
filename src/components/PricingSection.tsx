import { Button } from "@/components/ui/button";
import { Card, CardContent, CardFooter, CardHeader, CardTitle } from "@/components/ui/card";
import Icon from "@/components/ui/icon";
import { useScrollAnimation } from "@/hooks/useScrollAnimation";
import { useState } from "react";
import { useToast } from "@/hooks/use-toast";

interface Plan {
  name: string;
  price: string;
  period: string;
  popular?: boolean;
  custom?: boolean;
  features: string[];
}

const PricingSection = () => {
  const { ref, isVisible } = useScrollAnimation();
  const { toast } = useToast();
  const [testing, setTesting] = useState(false);

  const handleTestWebhook = async () => {
    setTesting(true);
    try {
      const username = `test_${Date.now()}`;
      const webhook = {
        type: 'notification',
        event: 'payment.succeeded',
        object: {
          id: `test_${Date.now()}`,
          status: 'succeeded',
          amount: { value: '1.00', currency: 'RUB' },
          metadata: {
            username,
            plan_days: '1',
            plan_name: 'Test'
          },
          receipt: { customer: { email: 'test@test.com' } }
        }
      };
      
      const res = await fetch('https://functions.poehali.dev/1cd4e8c8-3e41-470f-a824-9c8dd42b6c9c', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(webhook)
      });
      
      const data = await res.json();
      toast({
        title: res.ok ? '‚úÖ Webhook –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω' : '‚ùå –û—à–∏–±–∫–∞',
        description: `Username: ${username}. –ü—Ä–æ–≤–µ—Ä—å –ª–æ–≥–∏ backend/payment`
      });
    } catch (e) {
      toast({ title: '‚ùå –û—à–∏–±–∫–∞', description: String(e), variant: 'destructive' });
    } finally {
      setTesting(false);
    }
  };

  const plans: Plan[] = [
    {
      name: "–¢–µ—Å—Ç",
      price: "Free",
      period: "",
      features: [
        "–¢–µ—Å—Ç webhook",
        "–°–æ–∑–¥–∞—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
        "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–æ–≤",
        "–õ–æ–≥–∏ –≤ backend/payment"
      ]
    },
    {
      name: "1 –ú–µ—Å—è—Ü",
      price: "200",
      period: "‚ÇΩ",
      popular: true,
      features: [
        "30 –ì–ë —Ç—Ä–∞—Ñ–∏–∫–∞ –≤ —Å—É—Ç–∫–∏",
        "–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π —É—Å—Ç—Ä–æ–π—Å—Ç–≤",
        "–õ—é–±—ã–µ –ª–æ–∫–∞—Ü–∏–∏",
        "–ë–∞–∑–æ–≤–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞"
      ]
    },
    {
      name: "3 –ú–µ—Å—è—Ü–∞",
      price: "550",
      period: "‚ÇΩ",
      features: [
        "30 –ì–ë —Ç—Ä–∞—Ñ–∏–∫–∞ –≤ —Å—É—Ç–∫–∏",
        "–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π —É—Å—Ç—Ä–æ–π—Å—Ç–≤",
        "–õ—é–±—ã–µ –ª–æ–∫–∞—Ü–∏–∏",
        "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7"
      ]
    },
    {
      name: "6 –ú–µ—Å—è—Ü–µ–≤",
      price: "1000",
      period: "‚ÇΩ",
      features: [
        "30 –ì–ë —Ç—Ä–∞—Ñ–∏–∫–∞ –≤ —Å—É—Ç–∫–∏",
        "–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π —É—Å—Ç—Ä–æ–π—Å—Ç–≤",
        "–õ—é–±—ã–µ –ª–æ–∫–∞—Ü–∏–∏",
        "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7"
      ]
    },
    {
      name: "12 –ú–µ—Å—è—Ü–µ–≤",
      price: "1500",
      period: "‚ÇΩ",
      features: [
        "30 –ì–ë —Ç—Ä–∞—Ñ–∏–∫–∞ –≤ —Å—É—Ç–∫–∏",
        "–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π —É—Å—Ç—Ä–æ–π—Å—Ç–≤",
        "–õ—é–±—ã–µ –ª–æ–∫–∞—Ü–∏–∏",
        "VIP –ø–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7"
      ]
    },
    {
      name: "Persona",
      price: "–û—Ç 2000",
      period: "‚ÇΩ",
      custom: true,
      features: [
        "–ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π —Ç—Ä–∞—Ñ–∏–∫",
        "–í—ã–¥–µ–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä",
        "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏",
        "–õ–∏—á–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä 24/7"
      ]
    }
  ];

  return (
    <section ref={ref} className="py-20 px-4 bg-black/30" id="pricing">
      <div className="container mx-auto max-w-6xl">
        <div className="text-center mb-16 animate-fade-in">
          <h2 className="text-4xl md:text-6xl font-black mb-4">–¢–∞—Ä–∏—Ñ—ã</h2>
          <p className="text-xl text-muted-foreground max-w-2xl mx-auto">
            –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –ø–ª–∞–Ω –∏ –Ω–∞—á–Ω–∏—Ç–µ –∑–∞—â–∏—â—ë–Ω–Ω—ã–π —Å—ë—Ä—Ñ–∏–Ω–≥ —É–∂–µ —Å–µ–≥–æ–¥–Ω—è
          </p>
        </div>

        <div className={`grid md:grid-cols-2 lg:grid-cols-6 gap-6 transition-all duration-1000 ${isVisible ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-10'}`}>
          {plans.map((plan, index) => (
            <Card key={index} className={`relative border-2 transition-all duration-300 hover:scale-105 ${plan.popular ? 'border-primary shadow-xl' : plan.custom ? 'border-purple-500 shadow-lg' : 'hover:border-primary'}`}>
              {plan.popular && (
                <div className="absolute -top-4 left-1/2 transform -translate-x-1/2 bg-primary text-primary-foreground px-4 py-1 rounded-full text-sm font-bold">
                  –ü–æ–ø—É–ª—è—Ä–Ω—ã–π
                </div>
              )}
              {plan.custom && (
                <div className="absolute -top-4 left-1/2 transform -translate-x-1/2 bg-purple-500 text-white px-4 py-1 rounded-full text-sm font-bold">
                  –ü—Ä–µ–º–∏—É–º
                </div>
              )}
              <CardHeader>
                <div className="flex justify-center mb-4">
                  <img 
                    src="https://cdn.poehali.dev/files/299c507f-f10f-4048-a927-9fa71def332e.jpg" 
                    alt="Speed VPN" 
                    className="w-20 h-20 rounded-full object-cover border-2 border-primary logo-animated"
                  />
                </div>
                <CardTitle className="text-2xl">{plan.name}</CardTitle>
                <div className="flex items-baseline gap-1 mt-4">
                  <span className="text-5xl font-black">{plan.price}</span>
                  <span className="text-2xl text-muted-foreground">{plan.period}</span>
                </div>
              </CardHeader>
              <CardContent>
                <ul className="space-y-3">
                  {plan.features.map((feature, featureIndex) => (
                    <li key={featureIndex} className="flex items-start gap-2">
                      <Icon name="Check" size={20} className="text-primary shrink-0 mt-0.5" />
                      <span className="text-sm">{feature}</span>
                    </li>
                  ))}
                </ul>
              </CardContent>
              <CardFooter>
                {plan.price === "Free" ? (
                  <Button 
                    className="w-full rounded-full button-glow" 
                    onClick={handleTestWebhook}
                    disabled={testing}
                  >
                    {testing ? "–û—Ç–ø—Ä–∞–≤–∫–∞..." : "üß™ –¢–µ—Å—Ç"}
                  </Button>
                ) : (
                  <Button className="w-full rounded-full button-glow" asChild>
                    <a href={plan.custom ? "https://t.me/gospeedvpn" : "https://t.me/shopspeedvpn_bot"} target="_blank" rel="noopener noreferrer">
                      {plan.custom ? "–°–≤—è–∑–∞—Ç—å—Å—è" : "–í—ã–±—Ä–∞—Ç—å –ø–ª–∞–Ω"}
                    </a>
                  </Button>
                )}
              </CardFooter>
            </Card>
          ))}
        </div>
      </div>
    </section>
  );
};

export default PricingSection;